using System;

namespace Cj.Chip8.Cpu
{
    public class CpuState
    {
        public CpuState()
        {
            var characters = new byte[]
                {
                    0xF0, 0x90, 0x90, 0x90, 0xF0,
                    0x20, 0x60, 0x20, 0x20, 0x70,
                    0xF0, 0x10, 0xF0, 0x80, 0xF0,
                    0xF0, 0x10, 0xF0, 0x10, 0xF0,
                    0x90, 0x90, 0xF0, 0x10, 0x10,
                    0xF0, 0x80, 0xF0, 0x10, 0xF0,
                    0xF0, 0x80, 0xF0, 0x90, 0xF0,
                    0xF0, 0x10, 0x20, 0x40, 0x40,
                    0xF0, 0x90, 0xF0, 0x90, 0xF0,
                    0xF0, 0x90, 0xF0, 0x10, 0xF0,
                    0xF0, 0x90, 0xF0, 0x90, 0x90,
                    0xE0, 0x90, 0xE0, 0x90, 0xE0,
                    0xF0, 0x80, 0x80, 0x80, 0xF0,
                    0xE0, 0x90, 0x90, 0x90, 0xE0,
                    0xF0, 0x80, 0xF0, 0x80, 0xF0,
                    0xF0, 0x80, 0xF0, 0x80, 0x80
                };

            Array.Copy(characters, 0, Memory, 0, characters.Length);
        }

        public readonly byte[] Memory = new byte[4096];
        public short ProgramCounter = 0;
        public byte StackPointer;

        public short[] Stack = new short[16];
        public byte[] V = new byte[16];
        public short I;

        public byte SoundTimer;
        public byte DelayTimer;
    }
}